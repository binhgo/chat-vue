{"remainingRequest":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/thread-loader/dist/cjs.js!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/babel-loader/lib/index.js!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/components/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/components/Chat.vue","mtime":1601966587456},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Header from \"./Header.vue\";\nimport MessageDisplay from \"./MessageDisplay.vue\";\nimport MessageManager from \"./MessageManager.vue\";\nimport { mapMutations } from 'vuex';\nimport store from \"../store\";\nexport default {\n  name: 'chat',\n  components: {\n    Header: Header,\n    MessageDisplay: MessageDisplay,\n    MessageManager: MessageManager\n  },\n  props: {\n    participants: {\n      type: Array,\n      required: true\n    },\n    messages: {\n      type: Array,\n      required: true\n    },\n    myself: {\n      type: Object,\n      required: true\n    },\n    chatTitle: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      required: false,\n      default: 'type your message here'\n    },\n    colors: {\n      type: Object,\n      required: true\n    },\n    borderStyle: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {\n          topLeft: \"10px\",\n          topRight: \"10px\",\n          bottomLeft: \"10px\",\n          bottomRight: \"10px\"\n        };\n      }\n    },\n    hideCloseButton: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    submitIconSize: {\n      type: Number,\n      required: false,\n      default: 24\n    },\n    submitImageIconSize: {\n      type: Number,\n      required: false,\n      default: 24\n    },\n    closeButtonIconSize: {\n      type: String,\n      required: false,\n      default: \"15px\"\n    },\n    asyncMode: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    loadMoreMessages: {\n      type: Function,\n      required: false,\n      default: null\n    },\n    scrollBottom: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {\n          messageSent: true,\n          messageReceived: false\n        };\n      }\n    },\n    displayHeader: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    sendImages: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    profilePictureConfig: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {\n          others: true,\n          myself: false,\n          styles: {\n            width: '25px',\n            height: '25px',\n            borderRadius: '50%'\n          }\n        };\n      }\n    },\n    timestampConfig: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {\n          format: 'HH:mm',\n          relative: false\n        };\n      }\n    },\n    linkOptions: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {\n          myself: {},\n          others: {}\n        };\n      }\n    },\n    acceptImageTypes: {\n      type: String,\n      required: false,\n      default: \"image/*\"\n    }\n  },\n  watch: {\n    participants: function participants() {\n      this.setParticipants(this.participants);\n    },\n    myself: function myself() {\n      this.setMyself(this.myself);\n    },\n    messages: function messages() {\n      this.setMessages(this.messages);\n    },\n    placeholder: function placeholder() {\n      this.setPlaceholder(this.placeholder);\n    },\n    chatTitle: function chatTitle() {\n      this.setChatTitle(this.chatTitle);\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    this.$store = store();\n  },\n  created: function created() {\n    this.setParticipants(this.participants);\n    this.setMyself(this.myself);\n    this.setMessages(this.messages);\n    this.setPlaceholder(this.placeholder);\n    this.setChatTitle(this.chatTitle);\n  },\n  methods: _objectSpread(_objectSpread({}, mapMutations(['setParticipants', 'setMyself', 'setMessages', 'setPlaceholder', 'setChatTitle'])), {}, {\n    onClose: function onClose() {\n      this.$emit(\"onClose\");\n    },\n    onType: function onType(e) {\n      this.$emit(\"onType\", e);\n    },\n    onMessageSubmit: function onMessageSubmit(message) {\n      this.$emit(\"onMessageSubmit\", message);\n    },\n    onImageSelected: function onImageSelected(data) {\n      this.$emit(\"onImageSelected\", data);\n    },\n    onImageClicked: function onImageClicked(message) {\n      this.$emit(\"onImageClicked\", message);\n    }\n  })\n};",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"quick-chat-container\"\n         :style=\"{'border-bottom-left-radius': borderStyle.bottomLeft, 'border-bottom-right-radius': borderStyle.bottomRight, 'border-top-right-radius': borderStyle.topRight, 'border-top-left-radius': borderStyle.topLeft}\">\n        <Header v-if=\"displayHeader\" :colors=\"colors\" :border-style=\"borderStyle\" \n                :hide-close-button=\"hideCloseButton\" :close-button-icon-size=\"closeButtonIconSize\" @onClose=\"onClose()\">\n            <template #header>\n                <slot name=\"header\"></slot>\n            </template>\n        </Header>\n        <MessageDisplay :colors=\"colors\" :async-mode=\"asyncMode\" :load-more-messages=\"loadMoreMessages\"\n                        :link-options=\"linkOptions\"\n                        :scroll-bottom=\"scrollBottom\"\n                        :profile-picture-config=\"profilePictureConfig\"\n                        :timestamp-config=\"timestampConfig\"\n                        @onImageClicked=\"onImageClicked\"/>\n        <MessageManager :colors=\"colors\"\n                        :border-style=\"borderStyle\" :submit-icon-size=\"submitIconSize\"\n                        :submit-image-icon-size=\"submitImageIconSize\"\n                        :send-images=\"sendImages\"\n                        :accept-image-types=\"acceptImageTypes\"\n                        @onImageSelected=\"onImageSelected\"\n                        @onMessageSubmit=\"onMessageSubmit\"\n                        @onType=\"onType\"/>\n    </div>\n</template>\n\n<script>\n    import Header from './Header.vue'\n    import MessageDisplay from './MessageDisplay.vue'\n    import MessageManager from './MessageManager.vue'\n    import {mapMutations} from 'vuex'\n    import store from '../store'\n\n    export default {\n        name: 'chat',\n        components: {\n            Header,\n            MessageDisplay,\n            MessageManager\n        },\n        props: {\n            participants: {\n                type: Array,\n                required: true\n            },\n            messages: {\n                type: Array,\n                required: true\n            },\n            myself: {\n                type: Object,\n                required: true\n            },\n            chatTitle: {\n                type: String,\n                required: false,\n                default: ''\n            },\n            placeholder: {\n                type: String,\n                required: false,\n                default: 'type your message here'\n            },\n            colors: {\n                type: Object,\n                required: true\n            },\n            borderStyle: {\n                type: Object,\n                required: false,\n                default: () => {\n                    return {\n                        topLeft: \"10px\",\n                        topRight: \"10px\",\n                        bottomLeft: \"10px\",\n                        bottomRight: \"10px\",\n                    }\n                }\n            },\n            hideCloseButton: {\n                type: Boolean,\n                required: false,\n                default: false\n            },\n            submitIconSize: {\n                type: Number,\n                required: false,\n                default: 24\n            },\n            submitImageIconSize: {\n                type: Number,\n                required: false,\n                default: 24\n            },\n            closeButtonIconSize: {\n                type: String,\n                required: false,\n                default: \"15px\"\n            },\n            asyncMode: {\n                type: Boolean,\n                required: false,\n                default: false\n            },\n            loadMoreMessages: {\n                type: Function,\n                required: false,\n                default: null\n            },\n            scrollBottom:{\n                type: Object,\n                required: false,\n                default: () => {\n                    return {\n                        messageSent: true,\n                        messageReceived: false\n                    }\n                }\n            },\n            displayHeader: {\n                type: Boolean,\n                required: false,\n                default: true\n            },\n            sendImages: {\n                type: Boolean,\n                required: false,\n                default: true\n            },\n            profilePictureConfig: {\n                type: Object,\n                required: false,\n                default: () => {\n                    return {\n                        others: true,\n                        myself: false,\n                        styles: {\n                            width: '25px',\n                            height: '25px',\n                            borderRadius: '50%'\n                        }\n                    }\n                }\n            },\n            timestampConfig: {\n                type: Object,\n                required: false,\n                default: () => {\n                    return {\n                        format: 'HH:mm',\n                        relative: false\n                    }\n                }\n            },\n            linkOptions: {\n                type: Object,\n                required: false,\n                default: () => {\n                    return {\n                        myself: {},\n                        others: {}\n                    }\n                }\n            },\n            acceptImageTypes: {\n                type: String,\n                required: false,\n                default: \"image/*\"\n            }\n        },\n        watch: {\n            participants() {\n                this.setParticipants(this.participants);\n            },\n            myself() {\n                this.setMyself(this.myself);\n            },\n            messages() {\n                this.setMessages(this.messages);\n            },\n            placeholder() {\n                this.setPlaceholder(this.placeholder);\n            },\n            chatTitle() {\n                this.setChatTitle(this.chatTitle);\n            }\n        },\n        beforeCreate() {\n            this.$store = store();\n        },\n        created() {\n            this.setParticipants(this.participants);\n            this.setMyself(this.myself);\n            this.setMessages(this.messages);\n            this.setPlaceholder(this.placeholder);\n            this.setChatTitle(this.chatTitle);\n        },\n        methods: {\n            ...mapMutations([\n                'setParticipants',\n                'setMyself',\n                'setMessages',\n                'setPlaceholder',\n                'setChatTitle'\n            ]),\n            onClose: function(){\n                this.$emit(\"onClose\");\n            },\n            onType: function(e){\n                this.$emit(\"onType\", e)\n            },\n            onMessageSubmit: function(message){\n                this.$emit(\"onMessageSubmit\", message)\n            },\n            onImageSelected: function(data){\n                this.$emit(\"onImageSelected\", data)\n            },\n            onImageClicked: function(message){\n                this.$emit(\"onImageClicked\", message)\n            },\n        },\n    }\n</script>\n\n<style lang=\"less\">\n    .quick-chat-container {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        background: #f0eeee;\n        flex-direction: column;\n        align-items: stretch;\n        overflow: hidden;\n    }\n</style>\n"],"sourceRoot":"src/components"}]}