{"remainingRequest":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/thread-loader/dist/cjs.js!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/babel-loader/lib/index.js!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/eslint-loader/index.js??ref--13-0!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/store.js","dependencies":[{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/store.js","mtime":1601960433272},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _typeof from \"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport _toConsumableArray from \"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { DateTime } from \"luxon\";\nVue.use(Vuex);\nexport default (function () {\n  return new Vuex.Store({\n    state: {\n      messages: [],\n      myself: {},\n      participants: [],\n      chatTitle: '',\n      placeholder: ''\n    },\n    mutations: {\n      newMessage: function newMessage(state, message) {\n        message.timestamp = message.timestamp.toISO();\n        message.myself = message.participantId === state.myself.id;\n        state.messages = [].concat(_toConsumableArray(state.messages), [message]);\n      },\n      setParticipants: function setParticipants(state, participants) {\n        state.participants = participants;\n      },\n      setMyself: function setMyself(state, myself) {\n        state.myself = myself;\n      },\n      setMessages: function setMessages(state, messages) {\n        messages.map(function (message) {\n          if (_typeof(message.timestamp) == 'object') {\n            message.timestamp = DateTime.fromObject(message.timestamp).toISO();\n          }\n\n          if (!(\"myself\" in message)) message.myself = message.participantId === state.myself.id;\n        });\n        state.messages = messages;\n      },\n      setChatTitle: function setChatTitle(state, title) {\n        state.chatTitle = title;\n      },\n      setPlaceholder: function setPlaceholder(state, placeholder) {\n        state.placeholder = placeholder;\n      }\n    },\n    actions: {},\n    getters: {\n      getParticipantById: function getParticipantById(state) {\n        return function (id) {\n          var curr_participant;\n          state.participants.forEach(function (participant) {\n            if (participant.id === id) {\n              curr_participant = participant;\n            }\n          });\n          return curr_participant;\n        };\n      },\n      messages: function messages(state) {\n        var messages = [];\n        state.messages.forEach(function (message) {\n          var newMessage = _objectSpread({}, message);\n\n          newMessage.timestamp = DateTime.fromISO(newMessage.timestamp);\n          messages.push(newMessage);\n        });\n        return messages;\n      },\n      myself: function myself(state) {\n        return state.myself;\n      }\n    }\n  });\n});",{"version":3,"sources":["/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/store.js"],"names":["Vue","Vuex","DateTime","use","Store","state","messages","myself","participants","chatTitle","placeholder","mutations","newMessage","message","timestamp","toISO","participantId","id","setParticipants","setMyself","setMessages","map","fromObject","setChatTitle","title","setPlaceholder","actions","getters","getParticipantById","curr_participant","forEach","participant","fromISO","push"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport { DateTime } from \"luxon\";\n\nVue.use(Vuex);\n\nexport default () => {\n    return new Vuex.Store({\n        state: {\n            messages: [],\n            myself: {},\n            participants: [],\n            chatTitle: '',\n            placeholder: ''\n        },\n        mutations: {\n            newMessage: (state, message) => {\n                message.timestamp = message.timestamp.toISO();\n                message.myself = message.participantId === state.myself.id;\n                state.messages = [...state.messages, message];\n            },\n            setParticipants: (state, participants) => {\n                state.participants = participants;\n            },\n            setMyself: (state, myself) => {\n                state.myself = myself;\n            },\n            setMessages: (state, messages) => {\n                messages.map(message => {\n                    if(typeof message.timestamp == 'object'){\n                        message.timestamp = DateTime.fromObject(message.timestamp).toISO();\n                    }\n                    if (!(\"myself\" in message))\n                        message.myself = message.participantId === state.myself.id;\n                });\n                state.messages = messages;\n            },\n            setChatTitle: (state, title) => {\n                state.chatTitle = title;\n            },\n            setPlaceholder: (state, placeholder) => {\n                state.placeholder = placeholder;\n            }\n        },\n        actions: {},\n        getters: {\n            getParticipantById: (state) => (id) => {\n                let curr_participant;\n                state.participants.forEach(participant => {\n                    if (participant.id === id) {\n                        curr_participant = participant;\n                    }\n                });\n\n                return curr_participant;\n            },\n            messages: (state) => {\n                let messages = [];\n                state.messages.forEach(message => {\n                    let newMessage = {...message};\n                    newMessage.timestamp = DateTime.fromISO(newMessage.timestamp);\n                    messages.push(newMessage);\n                });\n                return messages;\n            },\n            myself: (state) => {\n                return state.myself;\n            }\n        }\n    })\n}\n"]}]}