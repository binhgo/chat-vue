{"remainingRequest":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/thread-loader/dist/cjs.js!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/babel-loader/lib/index.js!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/eslint-loader/index.js??ref--13-0!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/main.js","dependencies":[{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/main.js","mtime":1602239533081},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/core-js/modules/es6.array.iterator.js\";\nimport \"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/core-js/modules/es6.promise.js\";\nimport \"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/core-js/modules/es6.object.assign.js\";\nimport \"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/core-js/modules/es7.promise.finally.js\";\nimport Vue from 'vue';\nimport App from \"./App.vue\";\nimport axios from 'axios';\nVue.config.productionTip = false; // Firebase App (the core Firebase SDK) is always required and must be listed first\n\nimport * as firebase from \"firebase/app\"; // // Add the Firebase products that you want to use\n\nimport \"firebase/messaging\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCUzr5lzJpvWz9BwtlAJVS_Y2f3csMutsY\",\n  authDomain: \"ghn-2020.firebaseapp.com\",\n  databaseURL: \"https://ghn-2020.firebaseio.com\",\n  projectId: \"ghn-2020\",\n  storageBucket: \"ghn-2020.appspot.com\",\n  messagingSenderId: \"981734276351\",\n  appId: \"1:981734276351:web:bb113e56603629b47c20ca\"\n}; // // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nvar mess = firebase.messaging(); // Add the public key generated from the console here.\n\nmess.usePublicVapidKey(\"BCC7WapefcNTu1w4331xmXv3kFNFNm4dWRzK_rDcAiwYdo6Rz4brqCqskMf0tTKO3my45gtnSHA2OkkGl6s0XTo\"); // // Get Instance ID token. Initially this makes a network call, once retrieved\n// // subsequent calls to getToken will return from cache.\n\nmess.getToken().then(function (currentToken) {\n  if (currentToken) {\n    sendTokenToServer(currentToken);\n  } else {\n    // Show permission request.\n    console.log('No Instance ID token available. Request permission to generate one.');\n  }\n}).catch(function (err) {\n  console.log('An error occurred while retrieving token. ', err);\n});\nnew Vue({\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount('#app'); // async function sendTokenToServer(token) {\n//   let req = {\n//     userId: \"1005\",\n//     registrationId: token,\n//     deviceName: \"android 10\",\n//   };\n//   axios.post(\"http://35.198.249.225:80/message/v1/firebase/device\", {\n//     body: req\n//   })\n//     .then(response => { })\n//     .catch(e => {\n//       this.errors.push(e)\n//     })\n// }\n\nnavigator.serviceWorker.register('./firebase-messaging-sw.js').then(function (registration) {\n  Vue.prototype.$messaging.useServiceWorker(registration);\n}).catch(function (err) {\n  console.log(err);\n});\nexport { default as Chat } from \"./components/Chat.vue\";",{"version":3,"sources":["/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/main.js"],"names":["Vue","App","axios","config","productionTip","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","mess","messaging","usePublicVapidKey","getToken","then","currentToken","sendTokenToServer","console","log","catch","err","render","h","$mount","navigator","serviceWorker","register","registration","prototype","$messaging","useServiceWorker","default","Chat"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACAF,GAAG,CAACG,MAAJ,CAAWC,aAAX,GAA2B,KAA3B,C,CAEA;;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B,C,CAEA;;AACA,OAAO,oBAAP;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,0BAFO;AAGnBC,EAAAA,WAAW,EAAE,iCAHM;AAInBC,EAAAA,SAAS,EAAE,UAJQ;AAKnBC,EAAAA,aAAa,EAAE,sBALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAArB,C,CASA;;AACAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB;AAEA,IAAMS,IAAI,GAAGV,QAAQ,CAACW,SAAT,EAAb,C,CAEA;;AACAD,IAAI,CAACE,iBAAL,CAAuB,yFAAvB,E,CAEA;AACA;;AACAF,IAAI,CAACG,QAAL,GAAgBC,IAAhB,CAAqB,UAACC,YAAD,EAAkB;AACrC,MAAIA,YAAJ,EAAkB;AAChBC,IAAAA,iBAAiB,CAACD,YAAD,CAAjB;AACD,GAFD,MAEO;AACL;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACD;AACF,CAPD,EAOGC,KAPH,CAOS,UAACC,GAAD,EAAS;AAChBH,EAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DE,GAA1D;AACD,CATD;AAWA,IAAIzB,GAAJ,CAAQ;AACN0B,EAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,WAAIA,CAAC,CAAC1B,GAAD,CAAL;AAAA;AADH,CAAR,EAEG2B,MAFH,CAEU,MAFV,E,CAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,SAAS,CAACC,aAAV,CAAwBC,QAAxB,CAAiC,4BAAjC,EACGZ,IADH,CACQ,UAACa,YAAD,EAAkB;AACtBhC,EAAAA,GAAG,CAACiC,SAAJ,CAAcC,UAAd,CAAyBC,gBAAzB,CAA0CH,YAA1C;AACD,CAHH,EAGKR,KAHL,CAGW,UAAAC,GAAG,EAAI;AACdH,EAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,CALH;AAOA,SAASW,OAAO,IAAIC,IAApB","sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport axios from 'axios'\nVue.config.productionTip = false\n\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from \"firebase/app\";\n\n// // Add the Firebase products that you want to use\nimport \"firebase/messaging\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCUzr5lzJpvWz9BwtlAJVS_Y2f3csMutsY\",\n  authDomain: \"ghn-2020.firebaseapp.com\",\n  databaseURL: \"https://ghn-2020.firebaseio.com\",\n  projectId: \"ghn-2020\",\n  storageBucket: \"ghn-2020.appspot.com\",\n  messagingSenderId: \"981734276351\",\n  appId: \"1:981734276351:web:bb113e56603629b47c20ca\"\n};\n// // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst mess = firebase.messaging();\n\n// Add the public key generated from the console here.\nmess.usePublicVapidKey(\"BCC7WapefcNTu1w4331xmXv3kFNFNm4dWRzK_rDcAiwYdo6Rz4brqCqskMf0tTKO3my45gtnSHA2OkkGl6s0XTo\");\n\n// // Get Instance ID token. Initially this makes a network call, once retrieved\n// // subsequent calls to getToken will return from cache.\nmess.getToken().then((currentToken) => {\n  if (currentToken) {\n    sendTokenToServer(currentToken);\n  } else {\n    // Show permission request.\n    console.log('No Instance ID token available. Request permission to generate one.');\n  }\n}).catch((err) => {\n  console.log('An error occurred while retrieving token. ', err);\n});\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n\n\n// async function sendTokenToServer(token) {\n\n//   let req = {\n//     userId: \"1005\",\n//     registrationId: token,\n//     deviceName: \"android 10\",\n//   };\n\n//   axios.post(\"http://35.198.249.225:80/message/v1/firebase/device\", {\n//     body: req\n//   })\n//     .then(response => { })\n//     .catch(e => {\n//       this.errors.push(e)\n//     })\n// }\n\nnavigator.serviceWorker.register('./firebase-messaging-sw.js')\n  .then((registration) => {\n    Vue.prototype.$messaging.useServiceWorker(registration)\n  }).catch(err => {\n    console.log(err)\n  })\n\nexport { default as Chat } from './components/Chat.vue';"]}]}