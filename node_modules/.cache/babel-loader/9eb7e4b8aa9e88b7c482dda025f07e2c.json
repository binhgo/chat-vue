{"remainingRequest":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/babel-loader/lib/index.js!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/components/OtherMessage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/components/OtherMessage.vue","mtime":1602393748573},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CheckIcon from 'vue-material-design-icons/Check';\nimport CheckAll from 'vue-material-design-icons/CheckAll';\nimport { mapGetters, mapMutations } from 'vuex';\nimport linkParse from \"../mixins/linkParse\";\nexport default {\n  components: {\n    CheckIcon: CheckIcon,\n    CheckAll: CheckAll\n  },\n  mixins: [linkParse],\n  props: {\n    message: {\n      type: Object,\n      required: true\n    },\n    asyncMode: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    colors: {\n      type: Object,\n      required: true\n    },\n\n    /* onImageClicked: {\n        type: Function,\n        required: false,\n        default: null\n    }, */\n    profilePictureConfig: {\n      type: Object,\n      required: true\n    },\n    timestampConfig: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: _objectSpread({}, mapGetters(['getParticipantById', 'messages', 'myself'])),\n  methods: {\n    onImageClicked: function onImageClicked(message) {\n      this.$emit(\"onImageClicked\", message);\n    }\n  }\n};",{"version":3,"sources":["OtherMessage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,OAAA,SAAA,MAAA,iCAAA;AACA,OAAA,QAAA,MAAA,oCAAA;AACA,SAAA,UAAA,EAAA,YAAA,QAAA,MAAA;AACA,OAAA,SAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,QAAA,EAAA;AAFA,GADA;AAKA,EAAA,MAAA,EAAA,CAAA,SAAA,CALA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KALA;AAUA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAVA;;AAcA;;;;;AAKA,IAAA,oBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAnBA;AAuBA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AAvBA,GANA;AAkCA,EAAA,QAAA,oBACA,UAAA,CAAA,CACA,oBADA,EAEA,UAFA,EAGA,QAHA,CAAA,CADA,CAlCA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,EAAA,wBAAA,OAAA,EAAA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,OAAA;AACA;AAHA;AAzCA,CAAA","sourcesContent":["<template>\n  <div class=\"other-message-body\">\n    <div v-if=\"profilePictureConfig.others\" class=\"thum-container\">\n      <img class=\"participant-thumb\" :src=\"getParticipantById(message.participantId).profilePicture\"\n           :style=\"{'width': profilePictureConfig.styles.width, 'height': profilePictureConfig.styles.height, 'border-radius': profilePictureConfig.styles.borderRadius}\">\n    </div>\n    <div class=\"message-content\">\n      <template v-if=\"message.type == 'image'\">\n        <p class=\"message-username-image\">{{ getParticipantById(message.participantId).name }}</p>\n        <div v-if=\"message.uploaded\" class=\"message-image\">\n          <img class=\"message-image-display\" :src=\"message.src\" alt=\"\" @click=\"onImageClicked(message)\">\n        </div>\n        <div v-else class=\"message-image\">\n          <img class=\"message-image-display img-overlay\" :src=\"message.preview\" alt=\"\">\n          <div class=\"img-loading\"></div>\n        </div>\n      </template>\n      <template v-else>\n        <div class=\"message-text\" :style=\"{background: colors.message.others.bg, color: colors.message.others.text}\">\n          <p class=\"message-username\">{{ getParticipantById(message.participantId).name }}</p>\n          <p ref=\"message-content\">{{ message.content }}</p>\n        </div>\n      </template>\n      <div class=\"message-timestamp\" :style=\"{'justify-content': 'baseline'}\">\n        <template v-if=\"timestampConfig.relative\">\n          {{ message.timestamp.toRelative() }}\n        </template>\n        <template v-else>\n          {{ message.timestamp.toFormat(timestampConfig.format) }}\n        </template>\n        <CheckIcon v-if=\"asyncMode && message.uploaded && !message.viewed\" :size=\"14\" class=\"icon-sent\"/>\n        <CheckAll v-else-if=\"asyncMode && message.uploaded && message.viewed\" :size=\"14\" class=\"icon-sent viewed\"/>\n        <div v-else-if=\"asyncMode\" class=\"message-loading\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CheckIcon from 'vue-material-design-icons/Check';\nimport CheckAll from 'vue-material-design-icons/CheckAll';\nimport {mapGetters, mapMutations} from 'vuex';\nimport linkParse from '../mixins/linkParse';\n\nexport default {\n  components: {\n    CheckIcon,\n    CheckAll,\n  },\n  mixins: [linkParse],\n  props: {\n    message: {\n      type: Object,\n      required: true\n    },\n    asyncMode: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    colors: {\n      type: Object,\n      required: true\n    },\n    /* onImageClicked: {\n        type: Function,\n        required: false,\n        default: null\n    }, */\n    profilePictureConfig: {\n      type: Object,\n      required: true\n    },\n    timestampConfig: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'getParticipantById',\n      'messages',\n      'myself'\n    ]),\n  },\n  methods: {\n    onImageClicked: function (message) {\n      this.$emit(\"onImageClicked\", message)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n.container-message-display .other-message-body {\n  display: flex;\n  align-items: flex-end;\n  padding-left: 10px;\n\n  .message-content {\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n    flex-direction: column;\n    flex-grow: 1;\n  }\n\n  .participant-thumb {\n    /* width: 25px;\n    height: 25px;\n    border-radius: 50%; */\n    margin-right: 10px;\n  }\n\n  .message-timestamp {\n    padding: 2px 7px;\n    border-radius: 15px;\n    margin: 0;\n    max-width: 50%;\n    overflow-wrap: break-word;\n    text-align: left;\n    font-size: 10px;\n    color: #bdb8b8;\n    width: 100%;\n    display: flex;\n    align-items: center;\n  }\n\n  .message-text {\n    background: #fff;\n    padding: 6px 10px;\n    line-height: 14px;\n    border-radius: 15px;\n    margin: 5px 0 5px 0;\n    max-width: 70%;\n    overflow-wrap: break-word;\n    text-align: left;\n    white-space: pre-wrap;\n    border-bottom-left-radius: 0px;\n    word-break: break-word;\n  }\n}\n</style>"],"sourceRoot":"src/components"}]}