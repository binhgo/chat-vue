{"remainingRequest":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/components/Chat.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/components/Chat.vue","mtime":1601966587456},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.quick-chat-container {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    background: #f0eeee;\n    flex-direction: column;\n    align-items: stretch;\n    overflow: hidden;\n}\n",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"quick-chat-container\"\n         :style=\"{'border-bottom-left-radius': borderStyle.bottomLeft, 'border-bottom-right-radius': borderStyle.bottomRight, 'border-top-right-radius': borderStyle.topRight, 'border-top-left-radius': borderStyle.topLeft}\">\n        <Header v-if=\"displayHeader\" :colors=\"colors\" :border-style=\"borderStyle\" \n                :hide-close-button=\"hideCloseButton\" :close-button-icon-size=\"closeButtonIconSize\" @onClose=\"onClose()\">\n            <template #header>\n                <slot name=\"header\"></slot>\n            </template>\n        </Header>\n        <MessageDisplay :colors=\"colors\" :async-mode=\"asyncMode\" :load-more-messages=\"loadMoreMessages\"\n                        :link-options=\"linkOptions\"\n                        :scroll-bottom=\"scrollBottom\"\n                        :profile-picture-config=\"profilePictureConfig\"\n                        :timestamp-config=\"timestampConfig\"\n                        @onImageClicked=\"onImageClicked\"/>\n        <MessageManager :colors=\"colors\"\n                        :border-style=\"borderStyle\" :submit-icon-size=\"submitIconSize\"\n                        :submit-image-icon-size=\"submitImageIconSize\"\n                        :send-images=\"sendImages\"\n                        :accept-image-types=\"acceptImageTypes\"\n                        @onImageSelected=\"onImageSelected\"\n                        @onMessageSubmit=\"onMessageSubmit\"\n                        @onType=\"onType\"/>\n    </div>\n</template>\n\n<script>\n    import Header from './Header.vue'\n    import MessageDisplay from './MessageDisplay.vue'\n    import MessageManager from './MessageManager.vue'\n    import {mapMutations} from 'vuex'\n    import store from '../store'\n\n    export default {\n        name: 'chat',\n        components: {\n            Header,\n            MessageDisplay,\n            MessageManager\n        },\n        props: {\n            participants: {\n                type: Array,\n                required: true\n            },\n            messages: {\n                type: Array,\n                required: true\n            },\n            myself: {\n                type: Object,\n                required: true\n            },\n            chatTitle: {\n                type: String,\n                required: false,\n                default: ''\n            },\n            placeholder: {\n                type: String,\n                required: false,\n                default: 'type your message here'\n            },\n            colors: {\n                type: Object,\n                required: true\n            },\n            borderStyle: {\n                type: Object,\n                required: false,\n                default: () => {\n                    return {\n                        topLeft: \"10px\",\n                        topRight: \"10px\",\n                        bottomLeft: \"10px\",\n                        bottomRight: \"10px\",\n                    }\n                }\n            },\n            hideCloseButton: {\n                type: Boolean,\n                required: false,\n                default: false\n            },\n            submitIconSize: {\n                type: Number,\n                required: false,\n                default: 24\n            },\n            submitImageIconSize: {\n                type: Number,\n                required: false,\n                default: 24\n            },\n            closeButtonIconSize: {\n                type: String,\n                required: false,\n                default: \"15px\"\n            },\n            asyncMode: {\n                type: Boolean,\n                required: false,\n                default: false\n            },\n            loadMoreMessages: {\n                type: Function,\n                required: false,\n                default: null\n            },\n            scrollBottom:{\n                type: Object,\n                required: false,\n                default: () => {\n                    return {\n                        messageSent: true,\n                        messageReceived: false\n                    }\n                }\n            },\n            displayHeader: {\n                type: Boolean,\n                required: false,\n                default: true\n            },\n            sendImages: {\n                type: Boolean,\n                required: false,\n                default: true\n            },\n            profilePictureConfig: {\n                type: Object,\n                required: false,\n                default: () => {\n                    return {\n                        others: true,\n                        myself: false,\n                        styles: {\n                            width: '25px',\n                            height: '25px',\n                            borderRadius: '50%'\n                        }\n                    }\n                }\n            },\n            timestampConfig: {\n                type: Object,\n                required: false,\n                default: () => {\n                    return {\n                        format: 'HH:mm',\n                        relative: false\n                    }\n                }\n            },\n            linkOptions: {\n                type: Object,\n                required: false,\n                default: () => {\n                    return {\n                        myself: {},\n                        others: {}\n                    }\n                }\n            },\n            acceptImageTypes: {\n                type: String,\n                required: false,\n                default: \"image/*\"\n            }\n        },\n        watch: {\n            participants() {\n                this.setParticipants(this.participants);\n            },\n            myself() {\n                this.setMyself(this.myself);\n            },\n            messages() {\n                this.setMessages(this.messages);\n            },\n            placeholder() {\n                this.setPlaceholder(this.placeholder);\n            },\n            chatTitle() {\n                this.setChatTitle(this.chatTitle);\n            }\n        },\n        beforeCreate() {\n            this.$store = store();\n        },\n        created() {\n            this.setParticipants(this.participants);\n            this.setMyself(this.myself);\n            this.setMessages(this.messages);\n            this.setPlaceholder(this.placeholder);\n            this.setChatTitle(this.chatTitle);\n        },\n        methods: {\n            ...mapMutations([\n                'setParticipants',\n                'setMyself',\n                'setMessages',\n                'setPlaceholder',\n                'setChatTitle'\n            ]),\n            onClose: function(){\n                this.$emit(\"onClose\");\n            },\n            onType: function(e){\n                this.$emit(\"onType\", e)\n            },\n            onMessageSubmit: function(message){\n                this.$emit(\"onMessageSubmit\", message)\n            },\n            onImageSelected: function(data){\n                this.$emit(\"onImageSelected\", data)\n            },\n            onImageClicked: function(message){\n                this.$emit(\"onImageClicked\", message)\n            },\n        },\n    }\n</script>\n\n<style lang=\"less\">\n    .quick-chat-container {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        background: #f0eeee;\n        flex-direction: column;\n        align-items: stretch;\n        overflow: hidden;\n    }\n</style>\n"]}]}