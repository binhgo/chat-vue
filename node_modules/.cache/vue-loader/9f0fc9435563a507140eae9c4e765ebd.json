{"remainingRequest":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/components/MessageManager.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/components/MessageManager.vue","mtime":1602090205197},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.quick-chat-container .container-message-manager {\n    height: 65px;\n    background: rgb(230, 222, 222);\n    display: flex;\n    align-items: center;\n    padding: 0 20px 0 20px;\n    -webkit-box-shadow: 0px -2px 40px 0px rgba(186, 186, 186, 0.67);\n    box-shadow: 0px -2px 40px 0px rgba(186, 186, 186, 0.67);\n\n    .message-text-box {\n        padding: 0 10px 0 10px;\n        flex: 1;\n        overflow: hidden;\n    }\n\n    .message-input {\n        width: 100%;\n        resize: none;\n        border: none;\n        outline: none;\n        box-sizing: border-box;\n        font-size: 15px;\n        font-weight: 400;\n        line-height: 1.33;\n        white-space: pre-wrap;\n        word-wrap: break-word;\n        color: #565867;\n        -webkit-font-smoothing: antialiased;\n        max-height: 40px;\n        bottom: 0;\n        overflow: scroll;\n        overflow-x: hidden;\n        overflow-y: auto;\n        text-align: left;\n        cursor: text;\n        display: inline-block;\n    }\n\n    .message-input:empty:before {\n        content: attr(placeholder);\n        display: block; /* For Firefox */\n        filter: contrast(15%);\n        outline: none;\n    }\n\n    .message-input:focus {\n        outline: none;\n    }\n\n    .container-send-message {\n        margin-left: 10px;\n    }\n\n    .container-send-message svg {\n        -webkit-box-sizing: content-box;\n        box-sizing: content-box;\n    }\n\n    .icon-send-message {\n        cursor: pointer;\n        opacity: 0.7;\n        transition: 0.3s;\n        border-radius: 11px;\n        padding: 8px;\n    }\n\n    .icon-send-message:hover {\n        opacity: 1;\n        background: #eee;\n    }\n}\n",{"version":3,"sources":["MessageManager.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"MessageManager.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"container-message-manager\">\n        <div class=\"message-text-box\">\n            <div ref=\"userInput\" class=\"message-input\" :placeholder=\"placeholder\"\n                 tabIndex=\"0\" contenteditable=\"true\"\n                 @input=\"handleType\" @keyup.enter.exact=\"sendMessage\"></div>\n        </div>\n        <div class=\"container-send-message icon-send-message\" @click.prevent=\"sendMessage\">\n            <SendIcon :size=\"submitIconSize\" :fill-color=\"colors.submitIcon\"/>\n        </div>\n        <div v-if=\"sendImages\" class=\"container-send-message icon-send-message\" @click=\"pickImage\">\n            <input ref=\"inputImage\" :accept=\"acceptImageTypes\" type=\"file\" style=\"display: none;\" @input=\"handleImageChange\">\n            <ImageIcon :size=\"submitImageIconSize\" :fill-color=\"colors.submitImageIcon\"/>\n        </div>\n    </div>\n</template>\n\n<script>\n    //import 'vue-material-design-icons/styles.css';\n    import {mapMutations} from 'vuex'\n    import { DateTime } from \"luxon\";\n    import SendIcon from 'vue-material-design-icons/Send';\n    import ImageIcon from 'vue-material-design-icons/Image';\n    export default {\n        components: {\n            SendIcon,\n            ImageIcon\n        },\n        props: {\n            colors: {\n                type: Object,\n                required: true\n            },\n            borderStyle: {\n                type: Object,\n                required: false,\n                default: () => {\n                    return {\n                        topLeft: \"10px\",\n                        topRight: \"10px\",\n                        bottomLeft: \"10px\",\n                        bottomRight: \"10px\",\n                    }\n                }\n            },\n            submitIconSize: {\n                type: Number,\n                required: false,\n                default: 24\n            },\n            submitImageIconSize: {\n                type: Number,\n                required: false,\n                default: 24\n            },\n            sendImages: {\n                type: Boolean,\n                required: false,\n                default: true\n            },\n            acceptImageTypes: {\n                type: String,\n                required: true\n            }\n        },\n        data() {\n            return {\n                textInput: ''\n            }\n        },\n        computed: {\n            myself() {\n                return this.$store.state.myself;\n            },\n            placeholder() {\n                return this.$store.state.placeholder;\n            }\n        },\n        methods: {\n            ...mapMutations([\n                'newMessage'\n            ]),\n            sendMessage(e) {\n                this.textInput = this.$refs.userInput.textContent;\n                this.$refs.userInput.textContent = '';\n                // match characters that are different of spaces, tabs, line breaks...\n                const matchNotEmpty = /[^\\s]+/i\n                // match characters that are between line spaces, tabs, line breaks...\n                const contentMatch = this.textInput.match(/^\\s*((.|\\n)+?)\\s*$/i)\n                if (this.textInput && matchNotEmpty.test(this.textInput) && contentMatch) {\n                    let message = {\n                        content: contentMatch[1],\n                        // myself: true,\n                        participantId: this.myself.id,\n                        timestamp: DateTime.local(),\n                        uploaded: false,\n                        viewed: false,\n                        type: 'text'\n                    };\n                    this.$emit(\"onMessageSubmit\", message);\n                    //this.onMessageSubmit(message);\n                    this.newMessage(message)\n                }\n            },\n            handleType: function (e) {\n                this.$emit(\"onType\", e);\n            },\n            pickImage: function(){\n                this.$refs.inputImage.click()\n            },\n            handleImageChange: async function(e){\n                const files = e.target.files\n                let message = {\n                    type: 'image',\n                    preview: URL.createObjectURL(files[0]),\n                    src: '',\n                    content: 'image',\n                    participantId: this.myself.id,\n                    timestamp: DateTime.local(),\n                    uploaded: false,\n                    viewed: false\n                };\n                this.$emit(\"onImageSelected\", {file: files[0], message});\n                //this.onImageSelected(files, message)\n                this.newMessage(message)\n            }\n        }\n    }\n</script>\n\n<style lang=\"less\">\n    .quick-chat-container .container-message-manager {\n        height: 65px;\n        background: rgb(230, 222, 222);\n        display: flex;\n        align-items: center;\n        padding: 0 20px 0 20px;\n        -webkit-box-shadow: 0px -2px 40px 0px rgba(186, 186, 186, 0.67);\n        box-shadow: 0px -2px 40px 0px rgba(186, 186, 186, 0.67);\n\n        .message-text-box {\n            padding: 0 10px 0 10px;\n            flex: 1;\n            overflow: hidden;\n        }\n\n        .message-input {\n            width: 100%;\n            resize: none;\n            border: none;\n            outline: none;\n            box-sizing: border-box;\n            font-size: 15px;\n            font-weight: 400;\n            line-height: 1.33;\n            white-space: pre-wrap;\n            word-wrap: break-word;\n            color: #565867;\n            -webkit-font-smoothing: antialiased;\n            max-height: 40px;\n            bottom: 0;\n            overflow: scroll;\n            overflow-x: hidden;\n            overflow-y: auto;\n            text-align: left;\n            cursor: text;\n            display: inline-block;\n        }\n\n        .message-input:empty:before {\n            content: attr(placeholder);\n            display: block; /* For Firefox */\n            filter: contrast(15%);\n            outline: none;\n        }\n\n        .message-input:focus {\n            outline: none;\n        }\n\n        .container-send-message {\n            margin-left: 10px;\n        }\n\n        .container-send-message svg {\n            -webkit-box-sizing: content-box;\n            box-sizing: content-box;\n        }\n\n        .icon-send-message {\n            cursor: pointer;\n            opacity: 0.7;\n            transition: 0.3s;\n            border-radius: 11px;\n            padding: 8px;\n        }\n\n        .icon-send-message:hover {\n            opacity: 1;\n            background: #eee;\n        }\n    }\n</style>\n"]}]}