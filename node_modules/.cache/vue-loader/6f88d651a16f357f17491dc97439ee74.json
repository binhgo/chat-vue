{"remainingRequest":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/components/MyMessage.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/components/MyMessage.vue","mtime":1602398772060},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.container-message-display .myself-message-body {\n    display: flex;\n    align-items: flex-end;\n    padding-right: 10px;\n    justify-content: flex-end;\n\n    .message-content {\n        display: flex;\n        align-items: flex-end;\n        justify-content: flex-start;\n        flex-direction: column;\n        flex-grow: 1;\n    }\n\n    .participant-thumb {\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n        margin-left: 10px;\n    }\n\n    .message-timestamp {\n        padding: 2px 7px;\n        border-radius: 15px;\n        margin: 0;\n        max-width: 50%;\n        overflow-wrap: break-word;\n        text-align: left;\n        font-size: 10px;\n        color: #bdb8b8;\n        width: 100%;\n        display: flex;\n        align-items: center;\n    }\n\n    .message-text {\n        background: #fff;\n        padding: 6px 10px;\n        line-height: 14px;\n        border-radius: 15px;\n        margin: 5px 0 5px 0;\n        max-width: 70%;\n        overflow-wrap: break-word;\n        text-align: left;\n        white-space: pre-wrap;\n        border-bottom-right-radius: 0px;\n        word-break: break-word;\n    }\n}\n",{"version":3,"sources":["MyMessage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyMessage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"myself-message-body\">\n        <div class=\"message-content\">\n            <template v-if=\"message.type == 'image'\">\n                <p class=\"message-username-image\">{{ myself.name }}</p>\n                <div v-if=\"message.uploaded\" class=\"message-image\">\n                    <img\n                        class=\"message-image-display\"\n                        :src=\"message.src\"\n                        alt=\"\"\n                        @click=\"onImageClicked(message)\"\n                    />\n                </div>\n                <div v-else class=\"message-image\">\n                    <img\n                        class=\"message-image-display img-overlay\"\n                        :src=\"message.preview\"\n                        alt=\"\"\n                    />\n                    <div class=\"img-loading\"></div>\n                </div>\n            </template>\n            <template v-else>\n                <div\n                    class=\"message-text\"\n                    :style=\"{\n                        background: colors.message.myself.bg,\n                        color: colors.message.myself.text,\n                    }\"\n                >\n                    <p class=\"message-username\">{{ myself.name }}</p>\n                    <p ref=\"message-content\">{{ message.content }}</p>\n                </div>\n            </template>\n            <div\n                class=\"message-timestamp\"\n                :style=\"{ 'justify-content': 'flex-end' }\"\n            >\n                <template v-if=\"timestampConfig.relative\">\n                    {{ message.timestamp.toRelative() }}\n                </template>\n                <template v-else>\n                    {{ message.timestamp.toFormat(timestampConfig.format) }}\n                </template>\n                <CheckIcon\n                    v-if=\"asyncMode && message.uploaded && !message.viewed\"\n                    :size=\"14\"\n                    class=\"icon-sent\"\n                />\n                <CheckAll\n                    v-else-if=\"asyncMode && message.uploaded && message.viewed\"\n                    :size=\"14\"\n                    class=\"icon-sent viewed\"\n                />\n                <div v-else-if=\"asyncMode\" class=\"message-loading\"></div>\n            </div>\n        </div>\n        <div v-if=\"profilePictureConfig.myself\" class=\"thum-container\">\n            <img\n                class=\"participant-thumb\"\n                :src=\"myself.profilePicture\"\n                :style=\"{\n                    width: profilePictureConfig.styles.width,\n                    height: profilePictureConfig.styles.height,\n                    'border-radius': profilePictureConfig.styles.borderRadius,\n                }\"\n            />\n        </div>\n    </div>\n</template>\n\n<script>\nimport CheckIcon from \"vue-material-design-icons/Check\";\nimport CheckAll from \"vue-material-design-icons/CheckAll\";\nimport {mapGetters, mapMutations} from \"vuex\";\nimport linkParse from \"../mixins/linkParse\";\n\nexport default {\n    components: {\n        CheckIcon,\n        CheckAll,\n    },\n    mixins: [linkParse],\n    props: {\n        message: {\n            type: Object,\n            required: true,\n        },\n        asyncMode: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        colors: {\n            type: Object,\n            required: true,\n        },\n        /* onImageClicked: {\n                type: Function,\n                required: false,\n                default: null\n            }, */\n        profilePictureConfig: {\n            type: Object,\n            required: true,\n        },\n        timestampConfig: {\n            type: Object,\n            required: true,\n        },\n    },\n    computed: {\n        ...mapGetters([\"getParticipantById\", \"messages\", \"myself\"]),\n    },\n    methods: {\n        onImageClicked: function (message) {\n            this.$emit(\"onImageClicked\", message);\n        },\n    },\n};\n</script>\n\n<style lang=\"less\">\n.container-message-display .myself-message-body {\n    display: flex;\n    align-items: flex-end;\n    padding-right: 10px;\n    justify-content: flex-end;\n\n    .message-content {\n        display: flex;\n        align-items: flex-end;\n        justify-content: flex-start;\n        flex-direction: column;\n        flex-grow: 1;\n    }\n\n    .participant-thumb {\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n        margin-left: 10px;\n    }\n\n    .message-timestamp {\n        padding: 2px 7px;\n        border-radius: 15px;\n        margin: 0;\n        max-width: 50%;\n        overflow-wrap: break-word;\n        text-align: left;\n        font-size: 10px;\n        color: #bdb8b8;\n        width: 100%;\n        display: flex;\n        align-items: center;\n    }\n\n    .message-text {\n        background: #fff;\n        padding: 6px 10px;\n        line-height: 14px;\n        border-radius: 15px;\n        margin: 5px 0 5px 0;\n        max-width: 70%;\n        overflow-wrap: break-word;\n        text-align: left;\n        white-space: pre-wrap;\n        border-bottom-right-radius: 0px;\n        word-break: break-word;\n    }\n}\n</style>"]}]}