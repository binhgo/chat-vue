{"remainingRequest":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/components/MyMessage.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/src/components/MyMessage.vue","mtime":1601960433270},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huynhbinh/GHN/Internal-Tool/vue-quick-chat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.container-message-display .myself-message-body{\n    display: flex;\n    align-items: flex-end;\n    padding-right: 10px;\n    justify-content: flex-end;\n\n\n    .message-content{\n        display: flex;\n        align-items: flex-end;\n        justify-content: flex-start;\n        flex-direction: column;\n        flex-grow: 1;\n    }\n\n    .participant-thumb{\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n        margin-left: 10px;\n    }\n\n    .message-timestamp {\n        padding: 2px 7px;\n        border-radius: 15px;\n        margin: 0;\n        max-width: 50%;\n        overflow-wrap: break-word;\n        text-align: left;\n        font-size: 10px;\n        color: #bdb8b8;\n        width: 100%;\n        display: flex;\n        align-items: center;\n    }\n\n    .message-text {\n        background: #fff;\n        padding: 6px 10px;\n        line-height: 14px;\n        border-radius: 15px;\n        margin: 5px 0 5px 0;\n        max-width: 70%;\n        overflow-wrap: break-word;\n        text-align: left;\n        white-space: pre-wrap;\n        border-bottom-right-radius: 0px;\n        word-break: break-word;\n    }\n}\n",{"version":3,"sources":["MyMessage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyMessage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"myself-message-body\">\n        <div class=\"message-content\">\n            <template v-if=\"message.type == 'image'\">\n                <p class=\"message-username-image\">{{myself.name}}</p>\n                <div v-if=\"message.uploaded\" class=\"message-image\">\n                    <img class=\"message-image-display\" :src=\"message.src\" alt=\"\" @click=\"onImageClicked(message)\">\n                </div>\n                <div v-else class=\"message-image\">\n                    <img class=\"message-image-display img-overlay\" :src=\"message.preview\" alt=\"\">\n                    <div class=\"img-loading\"></div>\n                </div>\n            </template>\n            <template v-else>    \n                <div class=\"message-text\" :style=\"{background: colors.message.myself.bg, color: colors.message.myself.text}\">\n                    <p class=\"message-username\">{{myself.name}}</p>\n                    <p ref=\"message-content\">{{message.content}}</p>\n                </div>\n            </template>\n            <div class=\"message-timestamp\" :style=\"{'justify-content': 'flex-end'}\">\n                <template v-if=\"timestampConfig.relative\">\n                    {{message.timestamp.toRelative()}}\n                </template>\n                <template v-else> \n                    {{message.timestamp.toFormat(timestampConfig.format)}}\n                </template>\n                <CheckIcon v-if=\"asyncMode && message.uploaded && !message.viewed\" :size=\"14\" class=\"icon-sent\"/>\n                <CheckAll v-else-if=\"asyncMode && message.uploaded && message.viewed\" :size=\"14\" class=\"icon-sent viewed\"/>\n                <div v-else-if=\"asyncMode\" class=\"message-loading\"></div>\n            </div>\n        </div>\n        <div v-if=\"profilePictureConfig.myself\" class=\"thum-container\">\n            <img class=\"participant-thumb\" :src=\"myself.profilePicture\"\n                 :style=\"{'width': profilePictureConfig.styles.width, 'height': profilePictureConfig.styles.height, 'border-radius': profilePictureConfig.styles.borderRadius}\">\n        </div>\n    </div>\n</template>\n\n<script>\n    import CheckIcon from 'vue-material-design-icons/Check';\n    import CheckAll from 'vue-material-design-icons/CheckAll';\n    import {mapGetters, mapMutations} from 'vuex';\n    import linkParse from '../mixins/linkParse';\n    export default {\n        components:{\n            CheckIcon,\n            CheckAll,\n        },\n        mixins: [linkParse],\n        props:{\n            message: {\n                type: Object,\n                required: true\n            },\n            asyncMode: {\n                type: Boolean,\n                required: false,\n                default: false\n            },\n            colors: {\n                type: Object,\n                required: true\n            },\n            /* onImageClicked: {\n                type: Function,\n                required: false,\n                default: null\n            }, */\n            profilePictureConfig: {\n                type: Object,\n                required: true\n            },\n            timestampConfig: {\n                type: Object,\n                required: true\n            }\n        },\n        computed: {\n            ...mapGetters([\n                'getParticipantById',\n                'messages',\n                'myself'\n            ]),\n        },\n        methods: {\n            onImageClicked: function(message){\n                this.$emit(\"onImageClicked\", message)\n            }\n        }\n    }\n</script>\n\n<style lang=\"less\">\n    .container-message-display .myself-message-body{\n        display: flex;\n        align-items: flex-end;\n        padding-right: 10px;\n        justify-content: flex-end;\n\n\n        .message-content{\n            display: flex;\n            align-items: flex-end;\n            justify-content: flex-start;\n            flex-direction: column;\n            flex-grow: 1;\n        }\n\n        .participant-thumb{\n            width: 25px;\n            height: 25px;\n            border-radius: 50%;\n            margin-left: 10px;\n        }\n\n        .message-timestamp {\n            padding: 2px 7px;\n            border-radius: 15px;\n            margin: 0;\n            max-width: 50%;\n            overflow-wrap: break-word;\n            text-align: left;\n            font-size: 10px;\n            color: #bdb8b8;\n            width: 100%;\n            display: flex;\n            align-items: center;\n        }\n\n        .message-text {\n            background: #fff;\n            padding: 6px 10px;\n            line-height: 14px;\n            border-radius: 15px;\n            margin: 5px 0 5px 0;\n            max-width: 70%;\n            overflow-wrap: break-word;\n            text-align: left;\n            white-space: pre-wrap;\n            border-bottom-right-radius: 0px;\n            word-break: break-word;\n        }\n    }\n</style>"]}]}